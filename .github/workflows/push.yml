name: Push

on:
  push:
    branches:
      - master

env:
  DOCKER_FILE_PATH: Dockerfile
  GOLANG_VERSION: 1.14
  OPERATOR_SDK_VERSION: "0.19.0"
  KUSTOMIZE_VERSION: "3.5.4"

jobs:
  build:
    name: Build
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v2
      with:
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
        fetch-depth: 0 # otherwise, you will fail to push refs to dest repo

    - name: Set up Go
      id: go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GOLANG_VERSION }}

    - name: Lint
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.26.0
        golangci-lint run --timeout=10m ./...

    # - name: Test
    #   run: GOFLAGS="-count=1" go test -v ./... -coverprofile cover.out

    - name: Generate Tag
      id: generate_tag
      uses: anothrNick/github-tag-action@1.26.0
      env:
        GITHUB_TOKEN: ${{ secrets.STAKATER_GITHUB_TOKEN }}
        WITH_V: true
        DEFAULT_BUMP: patch
        DRY_RUN: true
    
    - name: Build and push Docker images
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.STAKATER_NEXUS_USERNAME }}
        password: ${{ secrets.STAKATER_NEXUS_PASSWORD }}
        registry: ${{ secrets.STAKATER_NEXUS_REGISTRY }}
        repository: ${{ env.GITHUB_REPOSITORY }}
        add_git_labels: true
        dockerfile: ${{ env.DOCKER_FILE_PATH  }}
        tags: ${{ steps.generate_tag.outputs.new_tag }}

    
##############################
## Add steps to generate required artifacts for a release here(helm chart, operator manifest etc.)
##############################

    # Generate tag for operator without "v"
    - name: Generate Operator Tag
      id: generate_operator_tag
      uses: anothrNick/github-tag-action@1.26.0
      env:
        GITHUB_TOKEN: ${{ secrets.STAKATER_GITHUB_TOKEN }}
        WITH_V: false
        DEFAULT_BUMP: patch
        DRY_RUN: true

    # Install operator-sdk
    - name: Install operator-sdk
      env:
        OPERATOR_SDK_VERSION: ${{ env.OPERATOR_SDK_VERSION }}
      run: |
        curl -fL -o /tmp/operator-sdk "https://github.com/operator-framework/operator-sdk/releases/download/v${OPERATOR_SDK_VERSION}/operator-sdk-v${OPERATOR_SDK_VERSION}-x86_64-linux-gnu"
        sudo install /tmp/operator-sdk /usr/local/bin && rm -f /tmp/operator-sdk
        operator-sdk version
        operator-sdk version | grep -q "${OPERATOR_SDK_VERSION}"

    # Install kustomize
    - uses: imranismail/setup-kustomize@v1
      with:
        kustomize-version: ${{ env.KUSTOMIZE_VERSION }}

    - name: Generate Bundle
      env:
        VERSION: ${{ steps.generate_operator_tag.outputs.new_tag }}
      run: make bundle
      
    - name: Generate Package Manifests
      env:
        VERSION: ${{ steps.generate_operator_tag.outputs.new_tag }}
      run: make packagemanifests

    # Commit back changes
    - name: Commit files
      run: |
        git config --local user.email "stakater@gmail.com"
        git config --local user.name "stakater-user"
        git commit -m "[skip-ci] Update artifacts" -a
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.STAKATER_GITHUB_TOKEN }}

    - name: Push Latest Tag
      uses: anothrNick/github-tag-action@1.26.0
      env:
        GITHUB_TOKEN: ${{ secrets.STAKATER_GITHUB_TOKEN }}
        WITH_V: true
        DEFAULT_BUMP: patch

    - name: Notify Slack
      uses: 8398a7/action-slack@v3
      if: always() # Pick up events even if the job fails or is canceled.
      with:
        status: ${{ job.status }}
        fields: repo,author,action,eventName,ref,workflow
      env:
        GITHUB_TOKEN: ${{ secrets.STAKATER_GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.STAKATER_DELIVERY_SLACK_WEBHOOK }}